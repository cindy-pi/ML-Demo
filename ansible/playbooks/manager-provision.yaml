---
- name: Running Manager Node Playbook
  hosts: manager
  gather_facts: no
  become: yes
  become_method: sudo
  tasks:
    - name: Test for raspberry pi /proc/cpuinfo
      command: grep -E "Raspberry Pi|BCM2708|BCM2709|BCM2835|BCM2836" /proc/cpuinfo
      register: grep_cpuinfo_raspberrypi
      failed_when: false
      changed_when: false

    - name: Activating cgroup support
      lineinfile:
        path: /boot/cmdline.txt
        regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
        line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
        backrefs: true
      notify: reboot

    - name: "Update Repository cache"
      apt:
        update_cache: true
        cache_valid_time: 3600
        force_apt_get: true


    - name: "Install git"
      shell: sudo apt-get -y install git
      args:
        creates: /usr/bin/git

    - name: "Install blinkt git repo"
      become_user: pi
      shell: |
        pwd;
        mkdir -p docker;
        cd docker;
        git clone https://github.com/pimoroni/blinkt.git
      args:
        creates: docker/blinkt

    - name: "Install buildah"
      shell: sudo apt-get -y install buildah
      args:
        creates: /usr/bin/buildah

    - name: "Install docker"
      shell: sudo curl -fsSL https://get.docker.com | sh -
      args:
        creates: /usr/bin/docker

    - name: "Grant docker rights to pi user"
      shell: sudo usermod -aG docker pi

    - name: "Install k3s"
      shell: curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" sh - ; sudo chmod 644 /etc/rancher/k3s/k3s.yaml
      args:
        creates: /usr/local/bin/kubectl

    - name: "Register the k8s token"
      shell: echo "curl -sfL https://get.k3s.io | K3S_URL=https://"`ifconfig eth0 | grep 'inet ' | awk '{print $2}'`":6443 K3S_TOKEN="`cat /var/lib/rancher/k3s/server/node-token`" sh -"
      register: k8s_join_command

    - name: "Register k8s Token for Transfer to other playbooks "
      add_host:
        name: "transfer_variable"
        k8s_join_command: " {{ k8s_join_command.stdout }}"

    - name: "Copy generate_kubeconfig.sh to Manager Node"
      ansible.builtin.copy:
        src: files/generate_kubeconfig.sh
        dest: ./generate_kubeconfig.sh
        mode: '777'

    - name: "Copy k3s_build_private_repo_yaml.sh to Manager Node"
      ansible.builtin.copy:
        src: files/k3s_build_private_repo_yaml.sh
        dest: ./k3s_build_private_repo_yaml.sh
        mode: '777'

    - name: "Generate Internal and External kubecongig files"
      shell: ./generate_kubeconfig.sh
      args:
        creates: ./internal.kubeconfig

    - name: "Configure k3s to see private manager repo"
      shell: ./k3s_build_private_repo_yaml.sh
      args:
        creates: ./privateRepo.yaml

    - name: "Copy internal.kubeconfig to localhost"
      ansible.builtin.fetch:
        src: ./internal.kubeconfig
        dest: files/internal.kubeconfig
        mode: '700'
        flat: yes

    - name: "Copy external_config.config to localhost"
      ansible.builtin.fetch:
        src: ./external.kubeconfig
        dest: files/external.kubeconfig
        mode: '700'
        flat: yes

    - name: "Copy privateRepo.yaml to localhost"
      ansible.builtin.fetch:
        src: ./privateRepo.yaml
        dest: files/privateRepo.yaml
        mode: '700'
        flat: yes

    - name: "Push privateRepo.yaml"
      ansible.builtin.copy:
        src: files/privateRepo.yaml
        dest: /etc/rancher/k3s/registries.yaml
        mode: '744'

    - name: "Restart k3s node"
      shell: systemctl restart k3s

    - name: "Copy kube-blinkt to Manager Node"
      ansible.builtin.copy:
        src: kube-blinkt/
        dest: ./kube-blinkt
        mode: '777'

    - name: "Install k9s"
      shell: |
        sudo curl -sS https://webi.sh/k9s | sh - 
        sudo cp ~/.local/opt/*/bin/k9s /usr/bin/k9s
      args:
        creates: /usr/bin/k9s

    - name: "Push Internal kubeconfig file"
      ansible.builtin.copy:
        src: files/internal.kubeconfig
        dest: /etc/rancher/k3s/k3s.internal.yaml
        mode: '744'

    - name: "Add config file to .bash_profile"
      become_user: pi
      shell: echo ". ~/.profile ; export KUBECONFIG=/etc/rancher/k3s/k3s.internal.yaml" > ~/.bash_profile

    - name: "Build and Start blinkt kube monitor"
      become_user: pi
      shell: |
        . ~/.profile 
        cd ~/kube-blinkt 
        ./build.sh

  handlers:
    - name: Restart apache
      ansible.builtin.service:
        name: httpd
        state: restarted

    - name: reboot
      reboot:


