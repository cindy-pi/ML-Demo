---
- name: Running Manager Node Playbook
  hosts: manager
  gather_facts: no
  become: yes
  become_method: sudo
  tasks:
    - name: Test for raspberry pi /proc/cpuinfo
      command: grep -E "Raspberry Pi|BCM2708|BCM2709|BCM2835|BCM2836" /proc/cpuinfo
      register: grep_cpuinfo_raspberrypi
      failed_when: false
      changed_when: false

    - name: Activating cgroup support
      lineinfile:
        path: /boot/cmdline.txt
        regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
        line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
        backrefs: true

    - name: "Update Repository cache"
      apt:
        update_cache: true
        cache_valid_time: 3600
        force_apt_get: true


    - name: "Install git, if want to play with code"
      shell: sudo apt-get -y install git
      args:
        creates: /usr/bin/git

    - name: "Install buildah"
      shell: sudo apt-get -y install buildah
      args:
        creates: /usr/bin/buildah

    - name: "Install docker"
      shell: sudo curl -fsSL https://get.docker.com | sh -
      args:
        creates: /usr/bin/docker

    - name: "Grant docker rights to pi user"
      shell: sudo usermod -aG docker pi

    - name: "Install k3s"
      shell: curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" sh - ; sudo chmod 644 /etc/rancher/k3s/k3s.yaml
      args:
        creates: /usr/local/bin/kubectl

    - name: "Register the k8s token"
      shell: echo "curl -sfL https://get.k3s.io | K3S_URL=https://"`ifconfig eth0 | grep 'inet ' | awk '{print $2}'`":6443 K3S_TOKEN="`cat /var/lib/rancher/k3s/server/node-token`" sh -"
      register: k8s_join_command
    - debug:
        var: k8s_join_command

    - name: "Register k8s Token for Transfer to other playbooks "
      add_host:
        name: "transfer_variable"
        k8s_join_command: " {{ k8s_join_command.stdout }}"

    - name: "Copy generate_kubeconfig.sh to Manager Node"
      ansible.builtin.copy:
        src: files/generate_kubeconfig.sh
        dest: ./generate_kubeconfig.sh
        mode: '777'

    - name: "Copy k3s_build_private_repo_yaml.sh to Manager Node"
      ansible.builtin.copy:
        src: files/k3s_build_private_repo_yaml.sh
        dest: ./k3s_build_private_repo_yaml.sh
        mode: '777'

    - name: "Generate Internal and External kubecongig files"
      shell: ./generate_kubeconfig.sh
      args:
        creates: ./internal.kubeconfig

    - name: "Configure k3s to see private manager repo"
      shell: ./k3s_build_private_repo_yaml.sh
      args:
        creates: ./privateRepo.yaml

    - name: "Copy internal.kubeconfig to localhost"
      ansible.builtin.fetch:
        src: ./internal.kubeconfig
        dest: files/internal.kubeconfig
        mode: '700'
        flat: yes

    - name: "Copy external_config.config to localhost"
      ansible.builtin.fetch:
        src: ./external.kubeconfig
        dest: files/external.kubeconfig
        mode: '700'
        flat: yes

    - name: "Push privateRepo.yaml"
      ansible.builtin.copy:
        src: files/privateRepo.yaml
        dest: /etc/rancher/k3s/registries.yaml
        mode: '744'

    - name: "Restart k3s node"
      shell: systemctl restart k3s

    - name: "Install k9s"
      ansible.builtin.copy:
        src: files/k9s
        dest: /usr/bin/k9s
        mode: '777'

    - name: "Push Internal kubeconfig file"
      ansible.builtin.copy:
        src: files/internal.kubeconfig
        dest: /etc/rancher/k3s/k3s.internal.yaml
        mode: '744'

    - name: "Add config file to .bash_profile"
      become_user: pi
      shell: echo ". ~/.profile ; export KUBECONFIG=/etc/rancher/k3s/k3s.internal.yaml" > ~/.bash_profile

    - name: "Copy deployRegistry.sh to Manager Node"
      ansible.builtin.copy:
        src: files/deployRegistry.sh
        dest: ./deployRegistry.sh
        mode: '777'

    - name: "Deploy Private Docker repo"
      shell: ./deployRegistry.sh

    - name: "Copy blinkt from local to Manager Node"
      ansible.builtin.copy:
        src: files/blinkt/
        dest: ./blinkt/
        mode: '777'

    - name: "Deploy blinkt monitor"
      shell: |
        cd /home/pi/blinkt/
        chmod 777 ./deploy.sh
        ./deploy.sh

    - name: "Copy demo code from local to Manager Node"
      become_user: pi
      ansible.builtin.copy:
        src: files/demo/
        dest: ./demo/
        mode: '777'

    - name: "Execute Demo Setup on Manager Node"
      shell: |
        chown -R  pi:pi /home/pi/demo
        groupadd docker
        usermod -aG docker pi

    - name: "Execute Demo Setup on Manager Node"
      become_user: pi
      shell: |
        chmod 777 /home/pi/demo/deploy-demo-server.sh
        /home/pi/demo/deploy-demo-server.sh

    #- name: "Change Evistion Timeout from 600 sec to 30 sec"
      #shell: |
        #echo "    --kubelet-arg eviction-max-pod-grace-period=30" >>   /etc/systemd/system/k3s.service
        #systemctl daemon-reload
        #systemctl restart k3s
        #chown -R  pi:pi /home/pi/demo

  handlers:
    - name: reboot
      reboot:


